% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classify_seq.R
\name{classify_seq}
\alias{classify_seq}
\title{Cross-over design classification}
\usage{
classify_seq(sequences, summary = T)
}
\arguments{
\item{sequences}{An object of \code{\link[base]{class}} \code{xover_seq}; a
set of cross-over design sequences.}

\item{summary}{A \code{\link[base]{logical}} variable indicating whether a
summary of the function's progress, and the identified classification, should
be printed to the console. Defaults to \code{T}.}
}
\value{
A \code{\link[base]{list}} containing the following components
\itemize{
\item \code{classification}: A \code{\link[base]{character}} string
describing the classification of the specified cross-over design.
\item \code{occurrences}: A \code{\link[base]{matrix}} describing the
treatment occurrences.
\item \code{col_incidences}: A \code{\link[base]{matrix}} describing the
treatment column incidences.
\item \code{row_incidences}: A \code{\link[base]{matrix}} describing the
treatment row incidences.
\item \code{col_concurrences}: A \code{\link[base]{matrix}} describing the
treatment column concurrences.
\item \code{row_concurrences}: A \code{\link[base]{matrix}} describing the
treatment row concurrences.
}
}
\description{
Classifies a cross-over design.
}
\details{
\code{classify_seq()} supports the classification of a cross-over design (see
\code{sequences}). Ultimately, the design will be assigned in to one of
twelve possible categories. Briefly, a design is said to be a balanced block
design if the following three conditions hold:
\itemize{
\item Each treatment appears equally often in the design;
\item The design is binary in the sense that each treatment appears in each
block either \ifelse{html}{\out{<i>n</i>}}{\eqn{n}} or
\ifelse{html}{\out{<i>n</i> + 1}}{\eqn{n + 1}} times, where
\ifelse{html}{\out{<i>n</i>}}{\eqn{n}} is an integer;
\item The number of concurrences of treatments
\ifelse{html}{\out{<i>d</i><sub>1</sub>}}{\eqn{d_1}} and
\ifelse{html}{\out{<i>d</i><sub>2</sub>}}{\eqn{d_2}} is the same for all
pairs of distinct treatment
\ifelse{html}{\out{(<i>d</i><sub>1</sub>, <i>d</i><sub>2
</sub>)}}{\eqn{(d_1,d_2)}}.
}
Here, the blocks are either rows or columns. A design that has less columns
(rows) than treatments is said to be incomplete with respect to rows
(columns). A design that is balanced with respect to both rows and columns is
called a generalized Youden design (GYD). A GYD for which each treatment
occurs equally often in each row (column) is called uniform on the rows
(columns). If both conditions hold, it is called a generalized Latin Square.
A design where each treatment occurs exactly once in each row and column is
called a Latin Square. See the package vignette for details on these
potential classifications.
}
\examples{
# Classify a three-treatment three-period Latin Square
latin    <- seq_latin(D = 3)
classify <- classify_seq(latin)
}
\seealso{
The \code{seq_#()} functions within \code{\link[xover]{xover}}.
}
\author{
Based on code from the \code{\link[crossdes]{crossdes}} package by
Oliver Sailer.
}
